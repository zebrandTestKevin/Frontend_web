{"remainingRequest":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\babel-loader\\lib\\index.js!D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\src\\store\\account.module.js","dependencies":[{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\src\\store\\account.module.js","mtime":1660261329919},{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660005951608},{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\babel-loader\\lib\\index.js","mtime":1660005962392},{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\eslint-loader\\index.js","mtime":1660005950964}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgYWNjb3VudFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyJzsKaW1wb3J0IHsgdG9rZW5MaWIgfSBmcm9tICcuLi9saWIvdG9rZW4ubGliJzsKdmFyIHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyk7CnZhciB1c2VyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXInKTsKdmFyIHN0YXRlID0gewogIHN0YXR1czogdG9rZW4gPyB7CiAgICBsb2dnZWRJbjogdHJ1ZQogIH0gOiB7fSwKICB1c2VyOiB1c2VyID8gdXNlciA6IHt9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgbG9naW5TdWNjZXNzOiBmdW5jdGlvbiBsb2dpblN1Y2Nlc3Moc3RhdGUsIHVzZXIpIHsKICAgIHN0YXRlLnN0YXR1cyA9IHsKICAgICAgbG9nZ2VkSW46IHRydWUKICAgIH07CiAgICBzdGF0ZS51c2VyID0gdXNlcjsKICB9LAogIGxvZ2luRmFpbHVyZTogZnVuY3Rpb24gbG9naW5GYWlsdXJlKHN0YXRlKSB7CiAgICBzdGF0ZS5zdGF0dXMgPSB7fTsKICAgIHN0YXRlLnVzZXIgPSBudWxsOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKF9yZWYsIGxvZ2luUmVxdWVzdCkgewogICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCwKICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIGNvbW1pdCgiZ2VuZXJhbC9jaGFuZ2VMb2FkaW5nIiwgewogICAgICB0eXBlOiB0cnVlLAogICAgICBsYWJlbDogIkluaWNpYW5kbyBTZXNpw7NuIgogICAgfSwgewogICAgICByb290OiB0cnVlCiAgICB9KTsKICAgIGFjY291bnRTZXJ2aWNlLmxvZ2luKGxvZ2luUmVxdWVzdCkudGhlbihmdW5jdGlvbiAodXNlcikgewogICAgICBjb21taXQoJ2xvZ2luU3VjY2VzcycsIHVzZXIpOwogICAgICBjb21taXQoImdlbmVyYWwvY2hhbmdlTG9hZGluZyIsIHsKICAgICAgICB0eXBlOiBmYWxzZSwKICAgICAgICBsYWJlbDogIiIKICAgICAgfSwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICAgIHJvdXRlci5wdXNoKCcvaG9tZScpOwogICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbW1pdCgnbG9naW5GYWlsdXJlJywgZXJyb3IpOwogICAgICBkaXNwYXRjaCgnYWxlcnQvZXJyb3InLCBlcnJvciwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICAgIGNvbW1pdCgiZ2VuZXJhbC9jaGFuZ2VMb2FkaW5nIiwgewogICAgICAgIHR5cGU6IGZhbHNlLAogICAgICAgIGxhYmVsOiAiIgogICAgICB9LCB7CiAgICAgICAgcm9vdDogdHJ1ZQogICAgICB9KTsKICAgIH0pOwogIH0sCiAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoKSB7CiAgICB0b2tlbkxpYi5yZW1vdmVUb2tlbnMoKTsKICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogIH0KfTsKZXhwb3J0IHZhciBhY2NvdW50ID0gewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["D:/Kevin/Universidad/CursosUdemy-Platzi/zebrand_project/zebrand_frontend_web/zebrandweb/src/store/account.module.js"],"names":["accountService","router","tokenLib","token","localStorage","getItem","user","state","status","loggedIn","mutations","loginSuccess","loginFailure","actions","login","loginRequest","dispatch","commit","type","label","root","then","push","error","logout","removeTokens","location","reload","account","namespaced"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,aAA7B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,IAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,IAAME,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAEL,KAAK,GAAG;AAACM,IAAAA,QAAQ,EAAE;AAAX,GAAH,GAAsB,EADzB;AAEVH,EAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU;AAFV,CAAd;AAIA,IAAMI,SAAS,GAAG;AACdC,EAAAA,YADc,wBACDJ,KADC,EACMD,IADN,EACY;AACtBC,IAAAA,KAAK,CAACC,MAAN,GAAe;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAf;AACAF,IAAAA,KAAK,CAACD,IAAN,GAAaA,IAAb;AACH,GAJa;AAKdM,EAAAA,YALc,wBAKDL,KALC,EAKM;AAChBA,IAAAA,KAAK,CAACC,MAAN,GAAe,EAAf;AACAD,IAAAA,KAAK,CAACD,IAAN,GAAa,IAAb;AACH;AARa,CAAlB;AAUA,IAAMO,OAAO,GAAG;AACZC,EAAAA,KADY,uBACcC,YADd,EAC4B;AAAA,QAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,QAAvBC,MAAuB,QAAvBA,MAAuB;AACpCA,IAAAA,MAAM,CAAC,uBAAD,EAA0B;AAACC,MAAAA,IAAI,EAAE,IAAP;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAA1B,EAAmE;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAnE,CAAN;AACApB,IAAAA,cAAc,CAACc,KAAf,CAAqBC,YAArB,EACKM,IADL,CAEQ,UAAAf,IAAI,EAAI;AACJW,MAAAA,MAAM,CAAC,cAAD,EAAiBX,IAAjB,CAAN;AACAW,MAAAA,MAAM,CAAC,uBAAD,EAA0B;AAACC,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAA1B,EAAoD;AAACC,QAAAA,IAAI,EAAE;AAAP,OAApD,CAAN;AACAnB,MAAAA,MAAM,CAACqB,IAAP,CAAY,OAAZ;AACH,KANT,EAOQ,UAAAC,KAAK,EAAI;AACLN,MAAAA,MAAM,CAAC,cAAD,EAAiBM,KAAjB,CAAN;AACAP,MAAAA,QAAQ,CAAC,aAAD,EAAgBO,KAAhB,EAAuB;AAACH,QAAAA,IAAI,EAAE;AAAP,OAAvB,CAAR;AACAH,MAAAA,MAAM,CAAC,uBAAD,EAA0B;AAACC,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAA1B,EAAoD;AAACC,QAAAA,IAAI,EAAE;AAAP,OAApD,CAAN;AACH,KAXT;AAaH,GAhBW;AAiBZI,EAAAA,MAjBY,oBAiBH;AACLtB,IAAAA,QAAQ,CAACuB,YAAT;AACAC,IAAAA,QAAQ,CAACC,MAAT;AACH;AApBW,CAAhB;AAwBA,OAAO,IAAMC,OAAO,GAAG;AACnBC,EAAAA,UAAU,EAAE,IADO;AAEnBtB,EAAAA,KAAK,EAALA,KAFmB;AAGnBM,EAAAA,OAAO,EAAPA,OAHmB;AAInBH,EAAAA,SAAS,EAATA;AAJmB,CAAhB","sourcesContent":["import {accountService} from '../services';\r\nimport router from '../router';\r\nimport {tokenLib} from '../lib/token.lib'\r\n\r\nconst token = localStorage.getItem('token');\r\nconst user = localStorage.getItem('user');\r\nconst state = {\r\n    status: token ? {loggedIn: true} : {},\r\n    user: user ? user : {},\r\n};\r\nconst mutations = {\r\n    loginSuccess(state, user) {\r\n        state.status = {loggedIn: true};\r\n        state.user = user;\r\n    },\r\n    loginFailure(state) {\r\n        state.status = {};\r\n        state.user = null;\r\n    },\r\n};\r\nconst actions = {\r\n    login({dispatch, commit}, loginRequest) {\r\n        commit(\"general/changeLoading\", {type: true, label: \"Iniciando SesiÃ³n\"}, {root: true});\r\n        accountService.login(loginRequest)\r\n            .then(\r\n                user => {\r\n                    commit('loginSuccess', user);\r\n                    commit(\"general/changeLoading\", {type: false, label: \"\"}, {root: true});\r\n                    router.push('/home');\r\n                },\r\n                error => {\r\n                    commit('loginFailure', error);\r\n                    dispatch('alert/error', error, {root: true});\r\n                    commit(\"general/changeLoading\", {type: false, label: \"\"}, {root: true});\r\n                }\r\n            );\r\n    },\r\n    logout() {\r\n        tokenLib.removeTokens();\r\n        location.reload();\r\n    }\r\n};\r\n\r\n\r\nexport const account = {\r\n    namespaced: true,\r\n    state,\r\n    actions,\r\n    mutations\r\n};\r\n"]}]}