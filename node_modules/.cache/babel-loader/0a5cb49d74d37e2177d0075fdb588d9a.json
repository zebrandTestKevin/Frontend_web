{"remainingRequest":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\babel-loader\\lib\\index.js!D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\src\\store\\view.hospitals.module.js","dependencies":[{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\src\\store\\view.hospitals.module.js","mtime":1659985163896},{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660005951608},{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\babel-loader\\lib\\index.js","mtime":1660005962392},{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\eslint-loader\\index.js","mtime":1660005950964}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/Kevin/Universidad/CursosUdemy-Platzi/zebrand_project/zebrand_frontend_web/zebrandweb/src/store/view.hospitals.module.js"],"names":["Hospital","hospitalService","citiesService","state","dialogEditState","dialogDeleteState","hospital","title","totalHospitals","status","hospitals","cities","mutations","dialogEditOpen","data","dialogEditClose","dialogDeleteOpen","dialogDeleteClose","getHospitalsOk","gotHospitals","getCitiesOk","getFailed","editHospitalOk","idHospital","name","lon","lat","idCity","index","findIndex","v","splice","city","nameCity","deleteHospitalOk","addHospitalOk","actions","commit","getHospitals","dispatch","type","label","root","n","i","search","then","total","error","editHospital","addHospital","id","deleteHospital","getCities","viewHospitals","namespaced"],"mappings":"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","sourcesContent":["import Hospital from '../models/Hospital';\r\nimport {hospitalService} from '../services/'\r\nimport {citiesService} from '../services/'\r\n\r\nconst state = {\r\n    dialogEditState: false,\r\n    dialogDeleteState: false,\r\n    hospital: new Hospital(),\r\n    title: \"\",\r\n    totalHospitals: 0,\r\n    status: {},\r\n    hospitals: [],\r\n    cities: []\r\n};\r\nconst mutations = {\r\n    dialogEditOpen(state, data) {\r\n        state.dialogEditState = true;\r\n        state.hospital = data.hospital;\r\n        state.title = data.title;\r\n    },\r\n    dialogEditClose(state) {\r\n        state.dialogEditState = false;\r\n        state.hospital = new Hospital();\r\n        state.title = \"\";\r\n    },\r\n    dialogDeleteOpen(state, data) {\r\n        state.dialogDeleteState = true;\r\n        state.hospital = data;\r\n    },\r\n    dialogDeleteClose(state) {\r\n        state.dialogDeleteState = false;\r\n        state.hospital = new Hospital();\r\n    },\r\n    getHospitalsOk(state, data) {\r\n        state.status = {gotHospitals: true}\r\n        state.hospitals = data.hospitals\r\n        state.totalHospitals = data.totalHospitals\r\n    },\r\n    getCitiesOk(state, data) {\r\n        state.cities = data\r\n    },\r\n    getFailed(state) {\r\n        state.status = {}\r\n\r\n    },\r\n    editHospitalOk(state, data) {\r\n        state.hospital.idHospital = data.idHospital;\r\n        state.hospital.name = data.name;\r\n        state.hospital.lon = data.lon;\r\n        state.hospital.lat = data.lat;\r\n        state.hospital.idCity = data.idCity;\r\n        var index = state.hospitals.findIndex(v => v.idHospital === data.idHospital);\r\n        state.hospitals.splice(index, 1);\r\n        for (let city of state.cities) {\r\n            if (city.idCity == data.idCity) {\r\n                data.nameCity = city.city\r\n            }\r\n        }\r\n        state.hospitals.splice(index, 0, data);\r\n    },\r\n\r\n    deleteHospitalOk(state, data) {\r\n        state.hospitals.splice(state.hospitals.findIndex(v => v.idHospital === data.idHospital), 1);\r\n        state.totalHospitals--;\r\n    },\r\n    addHospitalOk(state, data) {\r\n        for (let city of state.cities) {\r\n            if (city.idCity == data.idCity) {\r\n                data.nameCity = city.city\r\n            }\r\n        }\r\n        state.hospitals.splice(0, 0, data);\r\n        state.totalHospitals++;\r\n    }\r\n\r\n};\r\nconst actions = {\r\n    dialogEditOpen({commit}, data) {\r\n        commit('dialogEditOpen', data)\r\n    },\r\n    dialogEditClose({commit}) {\r\n        commit('dialogEditClose')\r\n    },\r\n    dialogDeleteOpen({commit}, data) {\r\n        commit('dialogDeleteOpen', data)\r\n    },\r\n    dialogDeleteClose({commit}) {\r\n        commit('dialogDeleteClose')\r\n    },\r\n    getHospitals({dispatch, commit}, data) {\r\n        commit(\"general/changeLoading\", {type: true, label: \"Obteniendo Hospitales\"}, {root: true});\r\n        hospitalService.getHospitals(data.n, data.i, data.search)\r\n            .then(\r\n                data => {\r\n\r\n                    commit('getHospitalsOk', {hospitals: data.hospitals, totalHospitals: data.total});\r\n                    commit(\"general/changeLoading\", {type: false, label: \"\"}, {root: true});\r\n                },\r\n                error => {\r\n                    commit('getFailed');\r\n                    dispatch('alert/error', error, {root: true});\r\n                }\r\n            );\r\n    },\r\n    editHospital({dispatch, commit}, hospital) {\r\n        commit(\"general/changeLoading\", {type: true, label: \"Modificando Hospital\"}, {root: true});\r\n        hospitalService.editHospital(hospital)\r\n            .then(\r\n                () => {\r\n                    commit('editHospitalOk', hospital);\r\n                    commit(\"general/changeLoading\", {type: false, label: \"\"}, {root: true});\r\n                },\r\n                error => {\r\n                    commit('getFailed');\r\n                    dispatch('alert/error', error, {root: true});\r\n                }\r\n            );\r\n    },\r\n    addHospital({dispatch, commit}, hospital) {\r\n        commit(\"general/changeLoading\", {type: true, label: \"Agregando Hospital\"}, {root: true});\r\n        hospitalService.addHospital(hospital)\r\n            .then(\r\n                (id) => {\r\n                    hospital.idHospital = id;\r\n                    commit('addHospitalOk', hospital);\r\n                    commit(\"general/changeLoading\", {type: false, label: \"\"}, {root: true});\r\n                },\r\n                error => {\r\n                    commit('getFailed');\r\n                    dispatch('alert/error', error, {root: true});\r\n                }\r\n            );\r\n    },\r\n    deleteHospital({dispatch, commit}, hospital) {\r\n        commit(\"general/changeLoading\", {type: true, label: \"Eliminando Hospital\"}, {root: true});\r\n        hospitalService.deleteHospital(hospital)\r\n            .then(\r\n                () => {\r\n                    commit('deleteHospitalOk', hospital);\r\n                    commit(\"general/changeLoading\", {type: false, label: \"\"}, {root: true});\r\n                },\r\n                error => {\r\n                    commit('getFailed');\r\n                    dispatch('alert/error', error, {root: true});\r\n                }\r\n            );\r\n    },\r\n    getCities({dispatch, commit}) {\r\n        commit(\"general/changeLoading\", {type: true, label: \"Obteniendo Ciudades\"}, {root: true});\r\n\r\n        citiesService.getCities()\r\n            .then(\r\n                data => {\r\n\r\n                    commit('getCitiesOk', data);\r\n                    commit(\"general/changeLoading\", {type: false, label: \"\"}, {root: true});\r\n                },\r\n                error => {\r\n                    commit('getFailed');\r\n                    dispatch('alert/error', error, {root: true});\r\n                }\r\n            );\r\n    }\r\n};\r\n\r\n\r\nexport const viewHospitals = {\r\n    namespaced: true,\r\n    state,\r\n    actions,\r\n    mutations\r\n};\r\n"]}]}