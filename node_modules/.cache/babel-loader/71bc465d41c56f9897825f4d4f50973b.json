{"remainingRequest":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\babel-loader\\lib\\index.js!D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\src\\services\\hospital.service.js","dependencies":[{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\src\\services\\hospital.service.js","mtime":1659985163237},{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660005951608},{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\babel-loader\\lib\\index.js","mtime":1660005962392},{"path":"D:\\Kevin\\Universidad\\CursosUdemy-Platzi\\zebrand_project\\zebrand_frontend_web\\zebrandweb\\node_modules\\eslint-loader\\index.js","mtime":1660005950964}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkQ6L0tldmluL1VuaXZlcnNpZGFkL0N1cnNvc1VkZW15LVBsYXR6aS96ZWJyYW5kX3Byb2plY3QvemVicmFuZF9mcm9udGVuZF93ZWIvemVicmFuZHdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJEOi9LZXZpbi9Vbml2ZXJzaWRhZC9DdXJzb3NVZGVteS1QbGF0emkvemVicmFuZF9wcm9qZWN0L3plYnJhbmRfZnJvbnRlbmRfd2ViL3plYnJhbmR3ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCB7IGFwaVVybCB9IGZyb20gJy4uL2NvbmZpZy9jb25maWcnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgSG9zcGl0YWwgZnJvbSAnLi4vbW9kZWxzL0hvc3BpdGFsJzsKZXhwb3J0IHZhciBob3NwaXRhbFNlcnZpY2UgPSB7CiAgZ2V0SG9zcGl0YWxzOiBnZXRIb3NwaXRhbHMsCiAgZWRpdEhvc3BpdGFsOiBlZGl0SG9zcGl0YWwsCiAgYWRkSG9zcGl0YWw6IGFkZEhvc3BpdGFsLAogIGRlbGV0ZUhvc3BpdGFsOiBkZWxldGVIb3NwaXRhbAp9OwoKZnVuY3Rpb24gZ2V0SG9zcGl0YWxzKF94LCBfeDIsIF94MykgewogIHJldHVybiBfZ2V0SG9zcGl0YWxzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9nZXRIb3NwaXRhbHMoKSB7CiAgX2dldEhvc3BpdGFscyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShuLCBpLCBzZWFyY2gpIHsKICAgIHZhciBjb21wbGVtZW50OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21wbGVtZW50ID0gIiI7CiAgICAgICAgICAgIGlmIChzZWFyY2ggPT0gbnVsbCB8fCBzZWFyY2ggPT0gIiIgfHwgc2VhcmNoID09IHVuZGVmaW5lZCkgY29tcGxlbWVudCA9ICJuPSIuY29uY2F0KG4sICImaT0iKS5jb25jYXQoaSk7ZWxzZSBjb21wbGVtZW50ID0gIm49Ii5jb25jYXQobiwgIiZpPSIpLmNvbmNhdChpLCAiJnNlYXJjaD0iKS5jb25jYXQoc2VhcmNoKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgYXhpb3MoewogICAgICAgICAgICAgIHVybDogIiIuY29uY2F0KGFwaVVybCwgImhvc3BpdGFsL2FsbEluZm8/IikgKyBjb21wbGVtZW50LAogICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgIGlmIChkYXRhLnN0YXR1cyA9PSAyMDApIHsKICAgICAgICAgICAgICAgIHZhciBob3NwaXRhbHMgPSBbXTsKCiAgICAgICAgICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZGF0YS5kYXRhLmhvc3BpdGFscyksCiAgICAgICAgICAgICAgICAgICAgX3N0ZXA7CgogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICAgICAgICB2YXIgaCA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgICAgICAgICAgIHZhciBob3NwaXRhbCA9IG5ldyBIb3NwaXRhbCgpLmZyb21Kc29uKGgpOwogICAgICAgICAgICAgICAgICAgIGhvc3BpdGFscy5wdXNoKGhvc3BpdGFsKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgIGhvc3BpdGFsczogaG9zcGl0YWxzLAogICAgICAgICAgICAgICAgICB0b3RhbDogZGF0YS5kYXRhLnRvdGFsCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aHJvdyAiZXJyb3IiOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIHRocm93ICJlcnJvciI7CiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfZ2V0SG9zcGl0YWxzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGVkaXRIb3NwaXRhbChfeDQpIHsKICByZXR1cm4gX2VkaXRIb3NwaXRhbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZWRpdEhvc3BpdGFsKCkgewogIF9lZGl0SG9zcGl0YWwgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGhvc3BpdGFsKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgYXhpb3MoewogICAgICAgICAgICAgIHVybDogIiIuY29uY2F0KGFwaVVybCwgImhvc3BpdGFsIiksCiAgICAgICAgICAgICAgbWV0aG9kOiAiUFVUIiwKICAgICAgICAgICAgICBkYXRhOiBob3NwaXRhbC50b0pzb24oKSwKICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09IDIwMCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgICAgICB9KSk7CgogICAgICAgICAgY2FzZSAxOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwogIHJldHVybiBfZWRpdEhvc3BpdGFsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGFkZEhvc3BpdGFsKF94NSkgewogIHJldHVybiBfYWRkSG9zcGl0YWwuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2FkZEhvc3BpdGFsKCkgewogIF9hZGRIb3NwaXRhbCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoaG9zcGl0YWwpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBheGlvcyh7CiAgICAgICAgICAgICAgdXJsOiAiIi5jb25jYXQoYXBpVXJsLCAiaG9zcGl0YWwiKSwKICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICBkYXRhOiBob3NwaXRhbC50b0pzb24oKSwKICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgaWYgKGRhdGEuc3RhdHVzID09IDIwMCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEuZGF0YS5pZEhvc3BpdGFsOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMpOwogIH0pKTsKICByZXR1cm4gX2FkZEhvc3BpdGFsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGRlbGV0ZUhvc3BpdGFsKF94NikgewogIHJldHVybiBfZGVsZXRlSG9zcGl0YWwuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX2RlbGV0ZUhvc3BpdGFsKCkgewogIF9kZWxldGVIb3NwaXRhbCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoaG9zcGl0YWwpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBheGlvcyh7CiAgICAgICAgICAgICAgdXJsOiAiIi5jb25jYXQoYXBpVXJsLCAiaG9zcGl0YWwiKSwKICAgICAgICAgICAgICBtZXRob2Q6ICJERUxFVEUiLAogICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgaG9zcGl0YWxJZDogaG9zcGl0YWwuaWRIb3NwaXRhbAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgIGlmIChkYXRhLnN0YXR1cyA9PSAyMDApIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQpOwogIH0pKTsKICByZXR1cm4gX2RlbGV0ZUhvc3BpdGFsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},{"version":3,"sources":["D:/Kevin/Universidad/CursosUdemy-Platzi/zebrand_project/zebrand_frontend_web/zebrandweb/src/services/hospital.service.js"],"names":["apiUrl","axios","Hospital","hospitalService","getHospitals","editHospital","addHospital","deleteHospital","n","i","search","complement","undefined","url","method","headers","then","data","status","hospitals","h","hospital","fromJson","push","total","catch","toJson","idHospital","params","hospitalId"],"mappings":"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","sourcesContent":["import {apiUrl} from '../config/config';\r\nimport axios from 'axios'\r\nimport Hospital from '../models/Hospital'\r\n\r\nexport const hospitalService = {\r\n    getHospitals,\r\n    editHospital,\r\n    addHospital,\r\n    deleteHospital\r\n};\r\n\r\nasync function getHospitals(n, i, search) {\r\n    var complement = \"\";\r\n    if (search == null || search == \"\" || search == undefined)\r\n        complement = `n=${n}&i=${i}`\r\n    else\r\n        complement = `n=${n}&i=${i}&search=${search}`\r\n    return axios({\r\n        url: `${apiUrl}hospital/allInfo?` + complement,\r\n        method: \"GET\",\r\n        headers: {\"Content-Type\": 'application/json'},\r\n\r\n    })\r\n        .then(data => {\r\n            if (data.status == 200) {\r\n                var hospitals = [];\r\n                for (var h of data.data.hospitals) {\r\n                    var hospital = new Hospital().fromJson(h);\r\n                    hospitals.push(hospital);\r\n                }\r\n\r\n                return {hospitals: hospitals, total: data.data.total};\r\n            } else {\r\n                throw \"error\";\r\n            }\r\n        }).catch(() => {\r\n            throw \"error\";\r\n        });\r\n}\r\n\r\nasync function editHospital(hospital) {\r\n    return axios({\r\n        url: `${apiUrl}hospital`,\r\n        method: \"PUT\",\r\n        data: hospital.toJson(),\r\n        headers: {\"Content-Type\": 'application/json'},\r\n\r\n    })\r\n        .then(data => {\r\n            if (data.status == 200) {\r\n                return true;\r\n            } else {\r\n                return null;\r\n            }\r\n        }).catch(() => {\r\n            return null\r\n        });\r\n}\r\n\r\nasync function addHospital(hospital) {\r\n    return axios({\r\n        url: `${apiUrl}hospital`,\r\n        method: \"POST\",\r\n        data: hospital.toJson(),\r\n        headers: {\"Content-Type\": 'application/json'},\r\n\r\n    })\r\n        .then(data => {\r\n            if (data.status == 200) {\r\n                return data.data.idHospital;\r\n            } else {\r\n                return null;\r\n            }\r\n        }).catch(() => {\r\n            return null\r\n        });\r\n}\r\n\r\nasync function deleteHospital(hospital) {\r\n    return axios({\r\n        url: `${apiUrl}hospital`,\r\n        method: \"DELETE\"\r\n        , params: {\r\n            hospitalId: hospital.idHospital\r\n        },\r\n        headers: {\"Content-Type\": 'application/json'},\r\n\r\n    })\r\n        .then(data => {\r\n            if (data.status == 200) {\r\n                return true;\r\n            } else {\r\n                return null;\r\n            }\r\n        }).catch(() => {\r\n            return null\r\n        });\r\n}"]}]}